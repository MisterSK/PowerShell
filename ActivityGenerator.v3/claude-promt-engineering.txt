Set-Location 'C:\Users\SanyaKhasenye(Sensit\WorkingDir\PowerShell\ActivityGenerator.v2\'; powershell.exe -executionpolicy bypass -file.\ActivityGeneratorStartUp.ps1 -rand_start_wait_max 2000 -rand_start_wait_min 14 ; powershell.exe -executionpolicy bypass -file .\ActivityOrchestrator.ps1; Set-Location 'C:\Users\SanyaKhasenye(Sensit\WorkingDir\PowerShell\ActivityGenerator.v2\'; powershell.exe -executionpolicy bypass -file.\ActivityGeneratorStartUp.ps1 -rand_start_wait_max 13000 -rand_start_wait_min 370 ; powershell.exe -executionpolicy bypass -file .\ActivityOrchestrator.ps1; Set-Location 'C:\Users\SanyaKhasenye(Sensit\WorkingDir\PowerShell\ActivityGenerator.v2\'; powershell.exe -executionpolicy bypass -file.\ActivityGeneratorStartUp.ps1 -rand_start_wait_max 1500 -rand_start_wait_min 170 ; powershell.exe -executionpolicy bypass -file .\ActivityOrchestrator.ps1; Set-Location 'C:\Users\SanyaKhasenye(Sensit\WorkingDir\PowerShell\ActivityGenerator.v2\'; powershell.exe -executionpolicy bypass -file.\ActivityGeneratorStartUp.ps1 -rand_start_wait_max 30000 -rand_start_wait_min 1470 ; powershell.exe -executionpolicy bypass -file .\ActivityOrchestrator.ps1; Set-Location 'C:\Users\SanyaKhasenye(Sensit\WorkingDir\PowerShell\ActivityGenerator.v2\'; powershell.exe -executionpolicy bypass -file.\ActivityGeneratorStartUp.ps1 -rand_start_wait_max 13000 -rand_start_wait_min 370 ; powershell.exe -executionpolicy bypass -file .\ActivityOrchestrator.ps1; Set-Location 'C:\Users\SanyaKhasenye(Sensit\WorkingDir\PowerShell\ActivityGenerator.v2\'; powershell.exe -executionpolicy bypass -file.\ActivityGeneratorStartUp.ps1 -rand_start_wait_max 1500 -rand_start_wait_min 170 ; powershell.exe -executionpolicy bypass -file .\ActivityOrchestrator.ps1 

Could you please generate a script startup orchestrator based on the commandline above that: * *
* *Sets how many iterations the named script should run *
* The maximum and minimum random number generator seeds for each iteration
* Write a running log file for the runtime count and other key run stats like the generated random number, and what the max and min seeds to generate them were

Could you make the following enhancements:

The log files should be stored in a Logs\YYYY\MM\DD\ActivityGenerator_Runtime.log hierarchy

Every instance of a launched script should have an identifying ID in the format <random-name>-YYYY-MMM-DD-HHMM where <random-name> is picked from an online random word generator and YYYY-MMM-DD-HHMM is the year, short month name, day, and hour and minute the script instance was launched. Where the online random name generator is unavailable, then pick randomly from an array of names stored in a local YAML file with 500 names. This file is updated every time a name is retrieved from an online word generator by adding it to the top of the file if it does not already exist and removing the last name at the bottom of the YAML name file

There should be a JSON file that stores 20 names of online word generating APIs which are picked randomly every time the orchestrator runs. If a name generator API picked from the JSON file is unavailable/unreachable more than 10 times then it is removed from the JSON file and later replaced by a newly used word generator API in later runs 